package uo.mp.util.collections.impl;

import uo.mp.util.collections.List;

public abstract class AbstractList<T> implements List {

    protected int numberOfElements;

    public AbstractList() {
        super();
    }

    public abstract int size();

    @Override
    public boolean isEmpty() {
        return this.size() == 0;
    }

    @Override
    public boolean contains(Object o) {
        if (o == null) {
            return false;
        }
        for (int i = 0; i < size(); i++) {
            if (o.equals(get(i))) {
                return true;
            }
        }
        return false;
    }

    @Override
    public boolean add(Object element) {
        if (element == null) {
            throw new IllegalArgumentException("Cannot add null elements to the list");
        }
        // Lógica para añadir el elemento a la lista
        return true; // O devuelve lo que sea apropiado para tu implementación
    }

    @Override
    public boolean remove(Object o) {
        if (o == null) {
            return false;
        }
        for (int i = 0; i < size(); i++) {
            if (o.equals(get(i))) {
                remove(i);
                return true;
            }
        }
        return false;
    }
}
